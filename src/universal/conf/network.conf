mantis {

  network {

    server-address {
      # Listening interface for Ethereum protocol connections
      # interface = "0.0.0.0"

      # Listening port for Ethereum protocol connections
      # port = 9076
    }

    discovery {
      # Turn discovery of/off
      # discovery-enabled = true

      # Listening port for discovery protocol
      # port = 30303

      # Set of initial nodes
      # bootstrap-nodes = [
      #  "enode://e809c4a2fec7daed400e5e28564e23693b23b2cc5a019b612505631bbe7b9ccf709c1796d2a3d29ef2b045f210caf51e3c4f5b6d3587d43ad5d6397526fa6179@174.112.32.157:30303",
      #  "enode://6e538e7c1280f0a31ff08b382db5302480f775480b8e68f8febca0ceff81e4b19153c6f8bf60313b93bef2cc34d34e1df41317de0ce613a201d1660a788a03e2@52.206.67.235:30303",
      #  "enode://5fbfb426fbb46f8b8c1bd3dd140f5b511da558cd37d60844b525909ab82e13a25ee722293c829e52cb65c2305b1637fa9a2ea4d6634a224d5f400bfe244ac0de@162.243.55.45:30303",
      #  "enode://42d8f29d1db5f4b2947cd5c3d76c6d0d3697e6b9b3430c3d41e46b4bb77655433aeedc25d4b4ea9d8214b6a43008ba67199374a9b53633301bca0cd20c6928ab@104.155.176.151:30303",
      #  "enode://814920f1ec9510aa9ea1c8f79d8b6e6a462045f09caa2ae4055b0f34f7416fca6facd3dd45f1cf1673c0209e0503f02776b8ff94020e98b6679a0dc561b4eba0@104.154.136.117:30303",
      #  "enode://72e445f4e89c0f476d404bc40478b0df83a5b500d2d2e850e08eb1af0cd464ab86db6160d0fde64bd77d5f0d33507ae19035671b3c74fec126d6e28787669740@104.198.71.200:30303",
      #  "enode://5cd218959f8263bc3721d7789070806b0adff1a0ed3f95ec886fb469f9362c7507e3b32b256550b9a7964a23a938e8d42d45a0c34b332bfebc54b29081e83b93@35.187.57.94:30303",
      #  "enode://39abab9d2a41f53298c0c9dc6bbca57b0840c3ba9dccf42aa27316addc1b7e56ade32a0a9f7f52d6c5db4fe74d8824bcedfeaecf1a4e533cacb71cf8100a9442@144.76.238.49:30303",
      #  "enode://f50e675a34f471af2438b921914b5f06499c7438f3146f6b8936f1faeb50b8a91d0d0c24fb05a66f05865cd58c24da3e664d0def806172ddd0d4c5bdbf37747e@144.76.238.49:30306",
      #  "enode://6dd3ac8147fa82e46837ec8c3223d69ac24bcdbab04b036a3705c14f3a02e968f7f1adfcdb002aacec2db46e625c04bf8b5a1f85bb2d40a479b3cc9d45a444af@104.237.131.102:30303"
      #]
    }

    peer {
      # Retry delay for failed attempt at connecting to a peer
      # connect-retry-delay = 1 minute

      # Maximum number of reconnect attempts after the connection has been initiated.
      # After that, the connection will be dropped until its initiated again (eg. by peer discovery)
      # connect-max-retries = 1

      # Maximum number of peers this node can connect to
      # max-outgoing-peers = 40

      # Maximum number of peers that can connect to this node
      # max-incoming-peers = 5

      # Maximum number of peers that can be connecting to this node
      # max-pending-peers = 5

      # Ethereum network identifier:
      # 1 - mainnet, 2 - morden
      # network-id = 1

      # Peer which disconnect during tcp connection becouse of too many peers will not be retried for this short duration
      # short-blacklist-duration = 6.minutes

      # Peer which disconnect during tcp connection becouse of other reasons will not be retried for this long duration
      # other reasons include: timeout during connection, wrong protocol, incompatible network
      # long-blacklist-duration = 30.minutes
    }

    rpc {
      http {
        # JSON-RPC mode
        # Available modes are: http, https
        # Choosing https requires creating a certificate and setting up 'certificate-keystore-path' and
        # 'certificate-password-file'
        # See: https://github.com/input-output-hk/mantis/wiki/Creating-self-signed-certificate-for-using-JSON-RPC-with-HTTPS
        mode = "https"

        # Whether to enable JSON-RPC HTTP(S) endpoint
        # enabled = true

        # Listening address of JSON-RPC HTTP(S) endpoint
        # interface = "localhost"

        # Listening port of JSON-RPC HTTP(S) endpoint
        # port = 8546

        # Path to the keystore storing the certificates (used only for https)
        # null value indicates HTTPS is not being used
        certificate-keystore-path = "conf/mantis.jks"

        # Type of certificate keystore being used
        # Has to be null or one of the ones listed in:
        #   https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyStore
        # A null value indicates HTTPS is not being used
        certificate-keystore-type = "jks"

        # File with the password used for accessing the certificate keystore (used only for https)
        # null value indicates HTTPS is not being used
        certificate-password-file = "conf/nopassword"

        # Domains allowed to query RPC endpoint. Use "*" to enable requests from
        # any domain.
        # cors-allowed-origins = []
      }

      ipc {
        # Whether to enable JSON-RPC over IPC
        # enabled = true

        # Path to IPC socket file
        # socket-file = ${mantis.datadir}"/mantis.ipc"
      }

      # Enabled JSON-RPC APIs over the JSON-RPC endpoint
      # Available choices are: eth, web3, net, personal, test, daedalus, iele
      # apis = "eth,web3,net,personal,daedalus"
    }
  }
}
